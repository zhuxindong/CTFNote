## hardras

p_mod值就是p的第5位到第805位的值，即泄露了中间800位，p一共1024比特，有如下关系：$p = x*2^{805}+p\_mod*2^5+y$，因此可以使用coppersmith求解小根得到未知的高位比特x和低位比特y，因为低位y很小，直接爆破，就可以直接用sage的`small_roots`接口算出来x，得到p后进行常规RSA解密即可。

```python
# sage
n = 537550465275439705257854066220250168275541163472876676133378551981313985351026062081898389881797136614810747220250587751097473712433924688498788709868511186562062520567688908667131478621023684699962513709757942489359784064939009424042612936795392803708747161542839845517682398601523763620021714927076112125427836627002543861044721526134809885293192400599928971070822656731710060647113050999897466934375175670206173212158197422563411162075149467195295491082527409340583862496440659345889675395642088066551413517537426415845534127668988580921802341246922657492711088936092280578741684384793612002601399589716008760753
c = 452043609350832267893942420272943536824591035166925475876535031990078935125149888478582008538895487749858786317740452886745274630025514488116255000833201855434080907951678661083007336334182256306319073014102210685858070467014007919044270494549119787124699302738813268047841308723128188546266227818286029083987932443480607916149569209084565626804248365136017558648886417641931623617522925844290083669508692992701648291360673441195415001411883523392334462939701718090698173370979257599338609978135152712738256519038325723216671690748259555345898220127484945796770298038345530826875735892878387442228900968702084382118
p_mod = 611496125526654602686673625121589549974794170451315225683439805648082543234036923061504042683555685847114401971159341100677636157486336753162911968670214382077888807832022697069092595993129809993855313248574449048859243722674929422834810643

# x*2**805 +  pmod + y
PR.<x> = PolynomialRing(Zmod(n))

for i in range(2**5):
    f = x*2**805 + p_mod*2**5 + i
    r = f.monic().small_roots(X=2**240, beta=0.4)
    if len(r)!=0:
        p = int(r[0]*2**805 + p_mod*2**5 + i)
        break
from Crypto.Util.number import *
q = n//p
assert p*q == n
print(long_to_bytes(int(pow(c,inverse(65537,(p-1)*(q-1)),n))))
```

